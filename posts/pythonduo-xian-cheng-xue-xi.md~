<!--
.. title: Python多线程学习
.. slug: pythonduo-xian-cheng-xue-xi
.. date: 2021-04-13 21:43:08 UTC+08:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
-->

> 理解python docs，首先是Executor Objects, Thread/ProcessPoolExecutor, 然后是Module Functions, 最后是Exception classes


## Intro
The concurrent.futures module provides a high-level interface for asynchronously executing callables

keyword: callables, high-level

## 基本框架
```python
with ThreadPoolExecutor(max_workers=1) as executor:
     future = executor.submit(pow, 323, 1235)
     print(future.result())     
```

## 提交任务
executor.submit(task, args) # 创建并提交一个任务
executor.map(func, *iterables) # 对iterables中每个值都创建并提交一个任务

## 下班
executor.shutdown(wait=True) # 下班了!


## 任务本身？
future.[cancel(), cancelled(), running(), done(), result(timeout=None), exception(timeout=None)]

有趣的方法！

future.add_done_callback(fn): fn的唯一参数为future
>怀念js

## Executor Objects
abstract class: concurrent.futures.Executor(need to be implemented!)


